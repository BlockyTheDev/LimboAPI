plugins {
    id "java-library"
    id "checkstyle"
    id "maven-publish"
}

apply plugin: "org.cadixdev.licenser"
apply from: "../gradle/checkstyle.gradle"

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

license {
    matching(includes: ["**/mcprotocollib/**"]) {
        header = project.rootProject.file("HEADER_MCPROTOCOLLIB.txt")
    }

    header = project.file("HEADER.txt")
}

dependencies {
    compileOnly files("../libs/3.0.0.jar")

    compileOnly "com.github.spotbugs:spotbugs-annotations:4.4.1"
}

task javadocJar(type: Jar) {
    classifier "javadoc"
    from javadoc
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = this.getProject().getGroup()
            artifactId = this.getProject().getName()
            version = this.getProject().getVersion()
            from components.java
        }
    }
}

artifacts {
    archives javadocJar
}

javadoc {
    options.encoding = "UTF-8"
    options.charSet = "UTF-8"
    options.source = "8"
    options.links(
        "https://docs.oracle.com/en/java/javase/11/docs/api/"
    )

    // Disable the crazy super-strict doclint tool in Java 8
    options.addStringOption("Xdoclint:none", "-quiet")

    // Mark sources as Java 8 source compatible
    options.source = "8"

    // Remove "undefined" from seach paths when generating javadoc for a non-modular project (JDK-8215291)
    if (JavaVersion.current() >= JavaVersion.VERSION_1_9 && JavaVersion.current() < JavaVersion.VERSION_12) {
        options.addBooleanOption("-no-module-directories", true)
    }
}

def generateTemplates = tasks.register("generateTemplates", Copy) { task ->
    def props = [
        "version": project.version
    ]
    task.inputs.properties props

    task.from file("src/main/templates")
    task.into layout.buildDirectory.dir("../build/generated/sources/templates")
    task.expand props
}

sourceSets.main.java.srcDir(generateTemplates.map {
    it.outputs
})
