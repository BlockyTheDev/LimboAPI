plugins {
    id "java"
    id "checkstyle"
}

apply plugin: "org.cadixdev.licenser"
apply from: "../gradle/checkstyle.gradle"
apply plugin: "com.github.johnrengelman.shadow"

license {
    header = project.rootProject.file("HEADER.txt")
}

dependencies {
    compileOnly(project(":limboapi-api"))
    compileOnly(project(":limboapi-plugin"))
    compileOnly(files("../libs/3.1.0.jar"))

    annotationProcessor("com.velocitypowered:velocity-api:3.1.0-SNAPSHOT")

    implementation("at.favre.lib:bcrypt:0.9.0")
    implementation("dev.samstevens.totp:totp:1.7.1")

    implementation("com.j256.ormlite:ormlite-jdbc:5.6")

    implementation("com.h2database:h2:1.4.200")
    implementation("mysql:mysql-connector-java:8.0.26")
    implementation("org.postgresql:postgresql:42.2.24")

    compileOnly("com.github.spotbugs:spotbugs-annotations:4.5.0")
}

shadowJar {
    getArchiveClassifier().set("")

    exclude("META-INF/maven/**")
    exclude("META-INF/INFO_BIN")
    exclude("META-INF/INFO_SRC")
    exclude("google/protobuf/**")
    exclude("com/google/protobuf/**")
    exclude("com/mysql/cj/x/**")
    exclude("com/mysql/cj/xdevapi/**")
    exclude("org/apache/commons/codec/language/**")
    exclude("org/checkerframework/**")
    exclude("**/package-info.class")

    minimize()

    relocate("at.favre.lib", "net.elytrium.limboauth.thirdparty.at.favre.lib")
    relocate("com.j256.ormlite", "net.elytrium.limboauth.thirdparty.com.j256.ormlite")
    relocate("com.mysql", "net.elytrium.limboauth.thirdparty.com.mysql")
    relocate("dev.samstevens.totp", "net.elytrium.limboauth.thirdparty.dev.samstevens.totp")
    relocate("org.apache.commons.codec", "net.elytrium.limboauth.thirdparty.org.apache.commons.codec")
    relocate("org.h2", "net.elytrium.limboauth.thirdparty.org.h2")
    relocate("org.postgresql", "net.elytrium.limboauth.thirdparty.org.postgresql")
}

assemble.dependsOn shadowJar
